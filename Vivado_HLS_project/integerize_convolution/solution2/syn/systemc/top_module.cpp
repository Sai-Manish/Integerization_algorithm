// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "top_module.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic top_module::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic top_module::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> top_module::ap_ST_fsm_state1 = "1";
const sc_lv<17> top_module::ap_ST_fsm_state2 = "10";
const sc_lv<17> top_module::ap_ST_fsm_state3 = "100";
const sc_lv<17> top_module::ap_ST_fsm_state4 = "1000";
const sc_lv<17> top_module::ap_ST_fsm_state5 = "10000";
const sc_lv<17> top_module::ap_ST_fsm_state6 = "100000";
const sc_lv<17> top_module::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> top_module::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> top_module::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> top_module::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> top_module::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> top_module::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> top_module::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> top_module::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> top_module::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> top_module::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> top_module::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> top_module::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> top_module::ap_const_lv32_1 = "1";
const sc_lv<1> top_module::ap_const_lv1_0 = "0";
const sc_lv<32> top_module::ap_const_lv32_2 = "10";
const sc_lv<32> top_module::ap_const_lv32_3 = "11";
const sc_lv<1> top_module::ap_const_lv1_1 = "1";
const sc_lv<32> top_module::ap_const_lv32_4 = "100";
const sc_lv<32> top_module::ap_const_lv32_5 = "101";
const sc_lv<32> top_module::ap_const_lv32_6 = "110";
const sc_lv<32> top_module::ap_const_lv32_B = "1011";
const sc_lv<32> top_module::ap_const_lv32_F = "1111";
const sc_lv<7> top_module::ap_const_lv7_0 = "0000000";
const sc_lv<32> top_module::ap_const_lv32_10 = "10000";
const sc_lv<3> top_module::ap_const_lv3_0 = "000";
const sc_lv<32> top_module::ap_const_lv32_C = "1100";
const sc_lv<7> top_module::ap_const_lv7_7C = "1111100";
const sc_lv<7> top_module::ap_const_lv7_1 = "1";
const sc_lv<2> top_module::ap_const_lv2_0 = "00";
const sc_lv<3> top_module::ap_const_lv3_5 = "101";
const sc_lv<3> top_module::ap_const_lv3_1 = "1";
const sc_lv<8> top_module::ap_const_lv8_1 = "1";
const sc_lv<32> top_module::ap_const_lv32_17 = "10111";
const sc_lv<32> top_module::ap_const_lv32_1E = "11110";
const sc_lv<9> top_module::ap_const_lv9_181 = "110000001";
const sc_lv<32> top_module::ap_const_lv32_8 = "1000";
const sc_lv<8> top_module::ap_const_lv8_7F = "1111111";
const sc_lv<32> top_module::ap_const_lv32_18 = "11000";
const sc_lv<32> top_module::ap_const_lv32_1F = "11111";
const bool top_module::ap_const_boolean_1 = true;

top_module::top_module(sc_module_name name) : sc_module(name), mVcdFile(0) {
    top_module_fmul_3bkb_U1 = new top_module_fmul_3bkb<1,4,32,32,32>("top_module_fmul_3bkb_U1");
    top_module_fmul_3bkb_U1->clk(ap_clk);
    top_module_fmul_3bkb_U1->reset(ap_rst);
    top_module_fmul_3bkb_U1->din0(tmp_reg_626);
    top_module_fmul_3bkb_U1->din1(alpha_kernel);
    top_module_fmul_3bkb_U1->ce(ap_var_for_const0);
    top_module_fmul_3bkb_U1->dout(grp_fu_211_p2);
    top_module_sitofpcud_U2 = new top_module_sitofpcud<1,6,32,32>("top_module_sitofpcud_U2");
    top_module_sitofpcud_U2->clk(ap_clk);
    top_module_sitofpcud_U2->reset(ap_rst);
    top_module_sitofpcud_U2->din0(convolute_2_reg_146);
    top_module_sitofpcud_U2->ce(ap_var_for_const0);
    top_module_sitofpcud_U2->dout(grp_fu_215_p1);
    top_module_mac_mudEe_U3 = new top_module_mac_mudEe<1,1,4,8,32,32>("top_module_mac_mudEe_U3");
    top_module_mac_mudEe_U3->din0(kernel_V_load_reg_616);
    top_module_mac_mudEe_U3->din1(grp_fu_516_p1);
    top_module_mac_mudEe_U3->din2(convolute_3_reg_179);
    top_module_mac_mudEe_U3->dout(grp_fu_516_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln215_1_fu_352_p2);
    sensitive << ( add_ln215_reg_568 );
    sensitive << ( zext_ln215_2_fu_348_p1 );

    SC_METHOD(thread_add_ln215_fu_309_p2);
    sensitive << ( zext_ln215_fu_293_p1 );
    sensitive << ( zext_ln215_1_fu_305_p1 );

    SC_METHOD(thread_add_ln26_fu_366_p2);
    sensitive << ( zext_ln22_reg_573 );
    sensitive << ( zext_ln26_fu_362_p1 );

    SC_METHOD(thread_add_ln32_fu_331_p2);
    sensitive << ( sub_ln32_reg_542 );
    sensitive << ( zext_ln32_2_fu_327_p1 );

    SC_METHOD(thread_add_ln339_fu_416_p2);
    sensitive << ( zext_ln339_fu_412_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_223_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_223_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_223_p2 );

    SC_METHOD(thread_grp_fu_516_p1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_fu_516_p10 );

    SC_METHOD(thread_grp_fu_516_p10);
    sensitive << ( input_load_reg_611 );

    SC_METHOD(thread_i_fu_229_p2);
    sensitive << ( x_reg_123 );

    SC_METHOD(thread_icmp_ln11_fu_223_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( x_reg_123 );

    SC_METHOD(thread_icmp_ln13_fu_269_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( y_reg_134 );

    SC_METHOD(thread_icmp_ln20_fu_281_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_168 );

    SC_METHOD(thread_icmp_ln22_fu_336_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( l_0_reg_200 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln26_1_fu_371_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_j_fu_275_p2);
    sensitive << ( y_reg_134 );

    SC_METHOD(thread_k_fu_287_p2);
    sensitive << ( k_0_reg_168 );

    SC_METHOD(thread_kernel_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln215_3_fu_357_p1 );

    SC_METHOD(thread_kernel_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_l_fu_342_p2);
    sensitive << ( l_0_reg_200 );

    SC_METHOD(thread_mantissa_V_fu_436_p4);
    sensitive << ( tmp_V_1_reg_631 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( sext_ln32_fu_512_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( isNeg_reg_641 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln662_fu_490_p1 );
    sensitive << ( tmp_4_fu_494_p4 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_p_Val2_s_fu_394_p1);
    sensitive << ( grp_fu_211_p2 );

    SC_METHOD(thread_r_V_1_fu_476_p2);
    sensitive << ( zext_ln682_fu_445_p1 );
    sensitive << ( zext_ln1287_fu_466_p1 );

    SC_METHOD(thread_r_V_fu_470_p2);
    sensitive << ( mantissa_V_fu_436_p4 );
    sensitive << ( sext_ln1311_2_fu_462_p1 );

    SC_METHOD(thread_sext_ln1311_1_fu_458_p1);
    sensitive << ( ush_fu_452_p3 );

    SC_METHOD(thread_sext_ln1311_2_fu_462_p1);
    sensitive << ( ush_fu_452_p3 );

    SC_METHOD(thread_sext_ln1311_fu_449_p1);
    sensitive << ( sub_ln1311_reg_647 );

    SC_METHOD(thread_sext_ln32_fu_512_p1);
    sensitive << ( add_ln32_reg_578 );

    SC_METHOD(thread_sub_ln1311_fu_430_p2);
    sensitive << ( tmp_V_fu_398_p4 );

    SC_METHOD(thread_sub_ln32_fu_259_p2);
    sensitive << ( zext_ln32_fu_243_p1 );
    sensitive << ( zext_ln32_1_fu_255_p1 );

    SC_METHOD(thread_tmp_1_fu_235_p3);
    sensitive << ( x_reg_123 );

    SC_METHOD(thread_tmp_2_fu_247_p3);
    sensitive << ( x_reg_123 );

    SC_METHOD(thread_tmp_4_fu_494_p4);
    sensitive << ( r_V_1_fu_476_p2 );

    SC_METHOD(thread_tmp_5_fu_297_p3);
    sensitive << ( k_0_reg_168 );

    SC_METHOD(thread_tmp_6_fu_315_p3);
    sensitive << ( x_0_reg_158 );

    SC_METHOD(thread_tmp_8_fu_482_p3);
    sensitive << ( r_V_fu_470_p2 );

    SC_METHOD(thread_tmp_V_1_fu_408_p1);
    sensitive << ( p_Val2_s_fu_394_p1 );

    SC_METHOD(thread_tmp_V_fu_398_p4);
    sensitive << ( p_Val2_s_fu_394_p1 );

    SC_METHOD(thread_ush_fu_452_p3);
    sensitive << ( add_ln339_reg_636 );
    sensitive << ( isNeg_reg_641 );
    sensitive << ( sext_ln1311_fu_449_p1 );

    SC_METHOD(thread_x_1_fu_382_p2);
    sensitive << ( x_0_reg_158 );

    SC_METHOD(thread_y_2_fu_376_p2);
    sensitive << ( y_1_reg_191 );

    SC_METHOD(thread_zext_ln1287_fu_466_p1);
    sensitive << ( sext_ln1311_1_fu_458_p1 );

    SC_METHOD(thread_zext_ln16_fu_219_p1);
    sensitive << ( x_reg_123 );

    SC_METHOD(thread_zext_ln17_fu_265_p1);
    sensitive << ( y_reg_134 );

    SC_METHOD(thread_zext_ln215_1_fu_305_p1);
    sensitive << ( tmp_5_fu_297_p3 );

    SC_METHOD(thread_zext_ln215_2_fu_348_p1);
    sensitive << ( l_0_reg_200 );

    SC_METHOD(thread_zext_ln215_3_fu_357_p1);
    sensitive << ( add_ln215_1_fu_352_p2 );

    SC_METHOD(thread_zext_ln215_fu_293_p1);
    sensitive << ( k_0_reg_168 );

    SC_METHOD(thread_zext_ln22_fu_323_p1);
    sensitive << ( tmp_6_fu_315_p3 );

    SC_METHOD(thread_zext_ln26_1_fu_371_p1);
    sensitive << ( add_ln26_fu_366_p2 );

    SC_METHOD(thread_zext_ln26_fu_362_p1);
    sensitive << ( y_1_reg_191 );

    SC_METHOD(thread_zext_ln32_1_fu_255_p1);
    sensitive << ( tmp_2_fu_247_p3 );

    SC_METHOD(thread_zext_ln32_2_fu_327_p1);
    sensitive << ( y_reg_134 );

    SC_METHOD(thread_zext_ln32_fu_243_p1);
    sensitive << ( tmp_1_fu_235_p3 );

    SC_METHOD(thread_zext_ln339_fu_412_p1);
    sensitive << ( tmp_V_fu_398_p4 );

    SC_METHOD(thread_zext_ln662_fu_490_p1);
    sensitive << ( tmp_8_fu_482_p3 );

    SC_METHOD(thread_zext_ln682_fu_445_p1);
    sensitive << ( mantissa_V_fu_436_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_223_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln20_fu_281_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln22_fu_336_p2 );
    sensitive << ( icmp_ln13_fu_269_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "top_module_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, kernel_V_address0, "(port)kernel_V_address0");
    sc_trace(mVcdFile, kernel_V_ce0, "(port)kernel_V_ce0");
    sc_trace(mVcdFile, kernel_V_q0, "(port)kernel_V_q0");
    sc_trace(mVcdFile, alpha_kernel, "(port)alpha_kernel");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, zext_ln16_fu_219_p1, "zext_ln16_fu_219_p1");
    sc_trace(mVcdFile, zext_ln16_reg_529, "zext_ln16_reg_529");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_229_p2, "i_fu_229_p2");
    sc_trace(mVcdFile, i_reg_537, "i_reg_537");
    sc_trace(mVcdFile, sub_ln32_fu_259_p2, "sub_ln32_fu_259_p2");
    sc_trace(mVcdFile, sub_ln32_reg_542, "sub_ln32_reg_542");
    sc_trace(mVcdFile, icmp_ln11_fu_223_p2, "icmp_ln11_fu_223_p2");
    sc_trace(mVcdFile, zext_ln17_fu_265_p1, "zext_ln17_fu_265_p1");
    sc_trace(mVcdFile, zext_ln17_reg_547, "zext_ln17_reg_547");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_fu_275_p2, "j_fu_275_p2");
    sc_trace(mVcdFile, j_reg_555, "j_reg_555");
    sc_trace(mVcdFile, k_fu_287_p2, "k_fu_287_p2");
    sc_trace(mVcdFile, k_reg_563, "k_reg_563");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln215_fu_309_p2, "add_ln215_fu_309_p2");
    sc_trace(mVcdFile, add_ln215_reg_568, "add_ln215_reg_568");
    sc_trace(mVcdFile, icmp_ln20_fu_281_p2, "icmp_ln20_fu_281_p2");
    sc_trace(mVcdFile, zext_ln22_fu_323_p1, "zext_ln22_fu_323_p1");
    sc_trace(mVcdFile, zext_ln22_reg_573, "zext_ln22_reg_573");
    sc_trace(mVcdFile, add_ln32_fu_331_p2, "add_ln32_fu_331_p2");
    sc_trace(mVcdFile, add_ln32_reg_578, "add_ln32_reg_578");
    sc_trace(mVcdFile, l_fu_342_p2, "l_fu_342_p2");
    sc_trace(mVcdFile, l_reg_586, "l_reg_586");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln22_fu_336_p2, "icmp_ln22_fu_336_p2");
    sc_trace(mVcdFile, y_2_fu_376_p2, "y_2_fu_376_p2");
    sc_trace(mVcdFile, y_2_reg_601, "y_2_reg_601");
    sc_trace(mVcdFile, x_1_fu_382_p2, "x_1_fu_382_p2");
    sc_trace(mVcdFile, input_load_reg_611, "input_load_reg_611");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, kernel_V_load_reg_616, "kernel_V_load_reg_616");
    sc_trace(mVcdFile, grp_fu_516_p3, "grp_fu_516_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_215_p1, "grp_fu_215_p1");
    sc_trace(mVcdFile, tmp_reg_626, "tmp_reg_626");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_V_1_fu_408_p1, "tmp_V_1_fu_408_p1");
    sc_trace(mVcdFile, tmp_V_1_reg_631, "tmp_V_1_reg_631");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, add_ln339_fu_416_p2, "add_ln339_fu_416_p2");
    sc_trace(mVcdFile, add_ln339_reg_636, "add_ln339_reg_636");
    sc_trace(mVcdFile, isNeg_reg_641, "isNeg_reg_641");
    sc_trace(mVcdFile, sub_ln1311_fu_430_p2, "sub_ln1311_fu_430_p2");
    sc_trace(mVcdFile, sub_ln1311_reg_647, "sub_ln1311_reg_647");
    sc_trace(mVcdFile, x_reg_123, "x_reg_123");
    sc_trace(mVcdFile, icmp_ln13_fu_269_p2, "icmp_ln13_fu_269_p2");
    sc_trace(mVcdFile, y_reg_134, "y_reg_134");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, convolute_2_reg_146, "convolute_2_reg_146");
    sc_trace(mVcdFile, x_0_reg_158, "x_0_reg_158");
    sc_trace(mVcdFile, k_0_reg_168, "k_0_reg_168");
    sc_trace(mVcdFile, convolute_3_reg_179, "convolute_3_reg_179");
    sc_trace(mVcdFile, y_1_reg_191, "y_1_reg_191");
    sc_trace(mVcdFile, l_0_reg_200, "l_0_reg_200");
    sc_trace(mVcdFile, zext_ln215_3_fu_357_p1, "zext_ln215_3_fu_357_p1");
    sc_trace(mVcdFile, zext_ln26_1_fu_371_p1, "zext_ln26_1_fu_371_p1");
    sc_trace(mVcdFile, sext_ln32_fu_512_p1, "sext_ln32_fu_512_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_1_fu_235_p3, "tmp_1_fu_235_p3");
    sc_trace(mVcdFile, tmp_2_fu_247_p3, "tmp_2_fu_247_p3");
    sc_trace(mVcdFile, zext_ln32_fu_243_p1, "zext_ln32_fu_243_p1");
    sc_trace(mVcdFile, zext_ln32_1_fu_255_p1, "zext_ln32_1_fu_255_p1");
    sc_trace(mVcdFile, tmp_5_fu_297_p3, "tmp_5_fu_297_p3");
    sc_trace(mVcdFile, zext_ln215_fu_293_p1, "zext_ln215_fu_293_p1");
    sc_trace(mVcdFile, zext_ln215_1_fu_305_p1, "zext_ln215_1_fu_305_p1");
    sc_trace(mVcdFile, tmp_6_fu_315_p3, "tmp_6_fu_315_p3");
    sc_trace(mVcdFile, zext_ln32_2_fu_327_p1, "zext_ln32_2_fu_327_p1");
    sc_trace(mVcdFile, zext_ln215_2_fu_348_p1, "zext_ln215_2_fu_348_p1");
    sc_trace(mVcdFile, add_ln215_1_fu_352_p2, "add_ln215_1_fu_352_p2");
    sc_trace(mVcdFile, zext_ln26_fu_362_p1, "zext_ln26_fu_362_p1");
    sc_trace(mVcdFile, add_ln26_fu_366_p2, "add_ln26_fu_366_p2");
    sc_trace(mVcdFile, grp_fu_211_p2, "grp_fu_211_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_394_p1, "p_Val2_s_fu_394_p1");
    sc_trace(mVcdFile, tmp_V_fu_398_p4, "tmp_V_fu_398_p4");
    sc_trace(mVcdFile, zext_ln339_fu_412_p1, "zext_ln339_fu_412_p1");
    sc_trace(mVcdFile, mantissa_V_fu_436_p4, "mantissa_V_fu_436_p4");
    sc_trace(mVcdFile, sext_ln1311_fu_449_p1, "sext_ln1311_fu_449_p1");
    sc_trace(mVcdFile, ush_fu_452_p3, "ush_fu_452_p3");
    sc_trace(mVcdFile, sext_ln1311_1_fu_458_p1, "sext_ln1311_1_fu_458_p1");
    sc_trace(mVcdFile, sext_ln1311_2_fu_462_p1, "sext_ln1311_2_fu_462_p1");
    sc_trace(mVcdFile, zext_ln682_fu_445_p1, "zext_ln682_fu_445_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_466_p1, "zext_ln1287_fu_466_p1");
    sc_trace(mVcdFile, r_V_fu_470_p2, "r_V_fu_470_p2");
    sc_trace(mVcdFile, tmp_8_fu_482_p3, "tmp_8_fu_482_p3");
    sc_trace(mVcdFile, r_V_1_fu_476_p2, "r_V_1_fu_476_p2");
    sc_trace(mVcdFile, zext_ln662_fu_490_p1, "zext_ln662_fu_490_p1");
    sc_trace(mVcdFile, tmp_4_fu_494_p4, "tmp_4_fu_494_p4");
    sc_trace(mVcdFile, grp_fu_516_p1, "grp_fu_516_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_516_p10, "grp_fu_516_p10");
#endif

    }
    mHdltvinHandle.open("top_module.hdltvin.dat");
    mHdltvoutHandle.open("top_module.hdltvout.dat");
}

top_module::~top_module() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete top_module_fmul_3bkb_U1;
    delete top_module_sitofpcud_U2;
    delete top_module_mac_mudEe_U3;
}

void top_module::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void top_module::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_269_p2.read()))) {
        convolute_2_reg_146 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln22_fu_336_p2.read()))) {
        convolute_2_reg_146 = convolute_3_reg_179.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_281_p2.read()))) {
        convolute_3_reg_179 = convolute_2_reg_146.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        convolute_3_reg_179 = grp_fu_516_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_269_p2.read()))) {
        k_0_reg_168 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln22_fu_336_p2.read()))) {
        k_0_reg_168 = k_reg_563.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_281_p2.read()))) {
        l_0_reg_200 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        l_0_reg_200 = l_reg_586.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_269_p2.read()))) {
        x_0_reg_158 = zext_ln16_reg_529.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln22_fu_336_p2.read()))) {
        x_0_reg_158 = x_1_fu_382_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln13_fu_269_p2.read()))) {
        x_reg_123 = i_reg_537.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_reg_123 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_281_p2.read()))) {
        y_1_reg_191 = zext_ln17_reg_547.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        y_1_reg_191 = y_2_reg_601.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_fu_223_p2.read(), ap_const_lv1_0))) {
        y_reg_134 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        y_reg_134 = j_reg_555.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_281_p2.read()))) {
        add_ln215_reg_568 = add_ln215_fu_309_p2.read();
        zext_ln22_reg_573 = zext_ln22_fu_323_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_281_p2.read(), ap_const_lv1_1))) {
        add_ln32_reg_578 = add_ln32_fu_331_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        add_ln339_reg_636 = add_ln339_fu_416_p2.read();
        isNeg_reg_641 = add_ln339_fu_416_p2.read().range(8, 8);
        sub_ln1311_reg_647 = sub_ln1311_fu_430_p2.read();
        tmp_V_1_reg_631 = tmp_V_1_fu_408_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_537 = i_fu_229_p2.read();
        zext_ln16_reg_529 = zext_ln16_fu_219_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_load_reg_611 = input_r_q0.read();
        kernel_V_load_reg_616 = kernel_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_555 = j_fu_275_p2.read();
        zext_ln17_reg_547 = zext_ln17_fu_265_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_563 = k_fu_287_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        l_reg_586 = l_fu_342_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln11_fu_223_p2.read(), ap_const_lv1_0))) {
        sub_ln32_reg_542 = sub_ln32_fu_259_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_reg_626 = grp_fu_215_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln22_fu_336_p2.read()))) {
        y_2_reg_601 = y_2_fu_376_p2.read();
    }
}

void top_module::thread_add_ln215_1_fu_352_p2() {
    add_ln215_1_fu_352_p2 = (!add_ln215_reg_568.read().is_01() || !zext_ln215_2_fu_348_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(add_ln215_reg_568.read()) + sc_biguint<6>(zext_ln215_2_fu_348_p1.read()));
}

void top_module::thread_add_ln215_fu_309_p2() {
    add_ln215_fu_309_p2 = (!zext_ln215_fu_293_p1.read().is_01() || !zext_ln215_1_fu_305_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln215_fu_293_p1.read()) + sc_biguint<6>(zext_ln215_1_fu_305_p1.read()));
}

void top_module::thread_add_ln26_fu_366_p2() {
    add_ln26_fu_366_p2 = (!zext_ln22_reg_573.read().is_01() || !zext_ln26_fu_362_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln22_reg_573.read()) + sc_biguint<16>(zext_ln26_fu_362_p1.read()));
}

void top_module::thread_add_ln32_fu_331_p2() {
    add_ln32_fu_331_p2 = (!zext_ln32_2_fu_327_p1.read().is_01() || !sub_ln32_reg_542.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln32_2_fu_327_p1.read()) + sc_biguint<15>(sub_ln32_reg_542.read()));
}

void top_module::thread_add_ln339_fu_416_p2() {
    add_ln339_fu_416_p2 = (!ap_const_lv9_181.is_01() || !zext_ln339_fu_412_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(zext_ln339_fu_412_p1.read()));
}

void top_module::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void top_module::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void top_module::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void top_module::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void top_module::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void top_module::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void top_module::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void top_module::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void top_module::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void top_module::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void top_module::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void top_module::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_fu_223_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void top_module::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void top_module::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_fu_223_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void top_module::thread_ap_return() {
    ap_return = ap_const_lv32_0;
}

void top_module::thread_grp_fu_516_p1() {
    grp_fu_516_p1 =  (sc_lv<8>) (grp_fu_516_p10.read());
}

void top_module::thread_grp_fu_516_p10() {
    grp_fu_516_p10 = esl_zext<12,8>(input_load_reg_611.read());
}

void top_module::thread_i_fu_229_p2() {
    i_fu_229_p2 = (!x_reg_123.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(x_reg_123.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void top_module::thread_icmp_ln11_fu_223_p2() {
    icmp_ln11_fu_223_p2 = (!x_reg_123.read().is_01() || !ap_const_lv7_7C.is_01())? sc_lv<1>(): sc_lv<1>(x_reg_123.read() == ap_const_lv7_7C);
}

void top_module::thread_icmp_ln13_fu_269_p2() {
    icmp_ln13_fu_269_p2 = (!y_reg_134.read().is_01() || !ap_const_lv7_7C.is_01())? sc_lv<1>(): sc_lv<1>(y_reg_134.read() == ap_const_lv7_7C);
}

void top_module::thread_icmp_ln20_fu_281_p2() {
    icmp_ln20_fu_281_p2 = (!k_0_reg_168.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_168.read() == ap_const_lv3_5);
}

void top_module::thread_icmp_ln22_fu_336_p2() {
    icmp_ln22_fu_336_p2 = (!l_0_reg_200.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(l_0_reg_200.read() == ap_const_lv3_5);
}

void top_module::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<14>) (zext_ln26_1_fu_371_p1.read());
}

void top_module::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void top_module::thread_j_fu_275_p2() {
    j_fu_275_p2 = (!y_reg_134.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(y_reg_134.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void top_module::thread_k_fu_287_p2() {
    k_fu_287_p2 = (!k_0_reg_168.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_reg_168.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void top_module::thread_kernel_V_address0() {
    kernel_V_address0 =  (sc_lv<5>) (zext_ln215_3_fu_357_p1.read());
}

void top_module::thread_kernel_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        kernel_V_ce0 = ap_const_logic_1;
    } else {
        kernel_V_ce0 = ap_const_logic_0;
    }
}

void top_module::thread_l_fu_342_p2() {
    l_fu_342_p2 = (!l_0_reg_200.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(l_0_reg_200.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void top_module::thread_mantissa_V_fu_436_p4() {
    mantissa_V_fu_436_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_1_reg_631.read()), ap_const_lv1_0);
}

void top_module::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<14>) (sext_ln32_fu_512_p1.read());
}

void top_module::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void top_module::thread_output_r_d0() {
    output_r_d0 = (!isNeg_reg_641.read()[0].is_01())? sc_lv<8>(): ((isNeg_reg_641.read()[0].to_bool())? zext_ln662_fu_490_p1.read(): tmp_4_fu_494_p4.read());
}

void top_module::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void top_module::thread_p_Val2_s_fu_394_p1() {
    p_Val2_s_fu_394_p1 = grp_fu_211_p2.read();
}

void top_module::thread_r_V_1_fu_476_p2() {
    r_V_1_fu_476_p2 = (!zext_ln1287_fu_466_p1.read().is_01())? sc_lv<55>(): zext_ln682_fu_445_p1.read() << (unsigned short)zext_ln1287_fu_466_p1.read().to_uint();
}

void top_module::thread_r_V_fu_470_p2() {
    r_V_fu_470_p2 = (!sext_ln1311_2_fu_462_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_436_p4.read() >> (unsigned short)sext_ln1311_2_fu_462_p1.read().to_uint();
}

void top_module::thread_sext_ln1311_1_fu_458_p1() {
    sext_ln1311_1_fu_458_p1 = esl_sext<32,9>(ush_fu_452_p3.read());
}

void top_module::thread_sext_ln1311_2_fu_462_p1() {
    sext_ln1311_2_fu_462_p1 = esl_sext<25,9>(ush_fu_452_p3.read());
}

void top_module::thread_sext_ln1311_fu_449_p1() {
    sext_ln1311_fu_449_p1 = esl_sext<9,8>(sub_ln1311_reg_647.read());
}

void top_module::thread_sext_ln32_fu_512_p1() {
    sext_ln32_fu_512_p1 = esl_sext<64,15>(add_ln32_reg_578.read());
}

void top_module::thread_sub_ln1311_fu_430_p2() {
    sub_ln1311_fu_430_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_fu_398_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_fu_398_p4.read()));
}

void top_module::thread_sub_ln32_fu_259_p2() {
    sub_ln32_fu_259_p2 = (!zext_ln32_fu_243_p1.read().is_01() || !zext_ln32_1_fu_255_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln32_fu_243_p1.read()) - sc_biguint<15>(zext_ln32_1_fu_255_p1.read()));
}

void top_module::thread_tmp_1_fu_235_p3() {
    tmp_1_fu_235_p3 = esl_concat<7,7>(x_reg_123.read(), ap_const_lv7_0);
}

void top_module::thread_tmp_2_fu_247_p3() {
    tmp_2_fu_247_p3 = esl_concat<7,2>(x_reg_123.read(), ap_const_lv2_0);
}

void top_module::thread_tmp_4_fu_494_p4() {
    tmp_4_fu_494_p4 = r_V_1_fu_476_p2.read().range(31, 24);
}

void top_module::thread_tmp_5_fu_297_p3() {
    tmp_5_fu_297_p3 = esl_concat<3,2>(k_0_reg_168.read(), ap_const_lv2_0);
}

void top_module::thread_tmp_6_fu_315_p3() {
    tmp_6_fu_315_p3 = esl_concat<8,7>(x_0_reg_158.read(), ap_const_lv7_0);
}

void top_module::thread_tmp_8_fu_482_p3() {
    tmp_8_fu_482_p3 = r_V_fu_470_p2.read().range(24, 24);
}

void top_module::thread_tmp_V_1_fu_408_p1() {
    tmp_V_1_fu_408_p1 = p_Val2_s_fu_394_p1.read().range(23-1, 0);
}

void top_module::thread_tmp_V_fu_398_p4() {
    tmp_V_fu_398_p4 = p_Val2_s_fu_394_p1.read().range(30, 23);
}

void top_module::thread_ush_fu_452_p3() {
    ush_fu_452_p3 = (!isNeg_reg_641.read()[0].is_01())? sc_lv<9>(): ((isNeg_reg_641.read()[0].to_bool())? sext_ln1311_fu_449_p1.read(): add_ln339_reg_636.read());
}

void top_module::thread_x_1_fu_382_p2() {
    x_1_fu_382_p2 = (!x_0_reg_158.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(x_0_reg_158.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void top_module::thread_y_2_fu_376_p2() {
    y_2_fu_376_p2 = (!y_1_reg_191.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(y_1_reg_191.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void top_module::thread_zext_ln1287_fu_466_p1() {
    zext_ln1287_fu_466_p1 = esl_zext<55,32>(sext_ln1311_1_fu_458_p1.read());
}

void top_module::thread_zext_ln16_fu_219_p1() {
    zext_ln16_fu_219_p1 = esl_zext<8,7>(x_reg_123.read());
}

void top_module::thread_zext_ln17_fu_265_p1() {
    zext_ln17_fu_265_p1 = esl_zext<8,7>(y_reg_134.read());
}

void top_module::thread_zext_ln215_1_fu_305_p1() {
    zext_ln215_1_fu_305_p1 = esl_zext<6,5>(tmp_5_fu_297_p3.read());
}

void top_module::thread_zext_ln215_2_fu_348_p1() {
    zext_ln215_2_fu_348_p1 = esl_zext<6,3>(l_0_reg_200.read());
}

void top_module::thread_zext_ln215_3_fu_357_p1() {
    zext_ln215_3_fu_357_p1 = esl_zext<64,6>(add_ln215_1_fu_352_p2.read());
}

void top_module::thread_zext_ln215_fu_293_p1() {
    zext_ln215_fu_293_p1 = esl_zext<6,3>(k_0_reg_168.read());
}

void top_module::thread_zext_ln22_fu_323_p1() {
    zext_ln22_fu_323_p1 = esl_zext<16,15>(tmp_6_fu_315_p3.read());
}

void top_module::thread_zext_ln26_1_fu_371_p1() {
    zext_ln26_1_fu_371_p1 = esl_zext<64,16>(add_ln26_fu_366_p2.read());
}

void top_module::thread_zext_ln26_fu_362_p1() {
    zext_ln26_fu_362_p1 = esl_zext<16,8>(y_1_reg_191.read());
}

void top_module::thread_zext_ln32_1_fu_255_p1() {
    zext_ln32_1_fu_255_p1 = esl_zext<15,9>(tmp_2_fu_247_p3.read());
}

void top_module::thread_zext_ln32_2_fu_327_p1() {
    zext_ln32_2_fu_327_p1 = esl_zext<15,7>(y_reg_134.read());
}

void top_module::thread_zext_ln32_fu_243_p1() {
    zext_ln32_fu_243_p1 = esl_zext<15,14>(tmp_1_fu_235_p3.read());
}

void top_module::thread_zext_ln339_fu_412_p1() {
    zext_ln339_fu_412_p1 = esl_zext<9,8>(tmp_V_fu_398_p4.read());
}

void top_module::thread_zext_ln662_fu_490_p1() {
    zext_ln662_fu_490_p1 = esl_zext<8,1>(tmp_8_fu_482_p3.read());
}

void top_module::thread_zext_ln682_fu_445_p1() {
    zext_ln682_fu_445_p1 = esl_zext<55,25>(mantissa_V_fu_436_p4.read());
}

void top_module::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln11_fu_223_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln13_fu_269_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_281_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln22_fu_336_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXX";
            break;
    }
}

void top_module::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address0\" :  \"" << output_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce0\" :  \"" << output_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we0\" :  \"" << output_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d0\" :  \"" << output_r_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_address0\" :  \"" << input_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_ce0\" :  \"" << input_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_q0\" :  \"" << input_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_V_address0\" :  \"" << kernel_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_V_ce0\" :  \"" << kernel_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_V_q0\" :  \"" << kernel_V_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alpha_kernel\" :  \"" << alpha_kernel.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

